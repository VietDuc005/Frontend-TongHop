// src/pages/CustomerManagement.jsx
import React, { useState } from "react";
import Table from "../components/common/Table"; // ‚úÖ d√πng component chung
import { Plus } from "lucide-react";

const CustomerManagement = () => {
  const [customers] = useState([
    {
      id: "KH001",
      name: "Anh Nam",
      phone: "0987654321",
      email: "anhnam@email.com",
      address: "123 ƒê∆∞·ªùng L√°ng, ƒê·ªëng ƒêa, H√† N·ªôi",
      status: "Ho·∫°t ƒë·ªông",
    },
    {
      id: "KH002",
      name: "Ch·ªã Lan",
      phone: "0912345678",
      email: "chilan@email.com",
      address: "45 Hai B√† Tr∆∞ng, Ho√†n Ki·∫øm, H√† N·ªôi",
      status: "Ho·∫°t ƒë·ªông",
    },
    {
      id: "KH003",
      name: "Anh Tu·∫•n",
      phone: "0934567890",
      email: "anhtuan@email.com",
      address: "78 C·∫ßu Gi·∫•y, C·∫ßu Gi·∫•y, H√† N·ªôi",
      status: "D·ª´ng ho·∫°t ƒë·ªông",
    },
  ]);

  const [searchTerm, setSearchTerm] = useState("");
  const [statusFilter, setStatusFilter] = useState("T·∫•t c·∫£ tr·∫°ng th√°i");

  // --- L·ªçc kh√°ch h√†ng ---
  const filteredCustomers = customers.filter((c) => {
    const matchSearch = Object.values(c)
      .join(" ")
      .toLowerCase()
      .includes(searchTerm.toLowerCase());
    const matchStatus =
      statusFilter === "T·∫•t c·∫£ tr·∫°ng th√°i" || c.status === statusFilter;
    return matchSearch && matchStatus;
  });

  // --- C·∫•u h√¨nh c·ªôt cho b·∫£ng ---
  const columns = [
    {
      key: "name",
      label: "Kh√°ch h√†ng",
      render: (value, row) => (
        <div className="flex flex-col">
          <span className="font-semibold text-gray-800">{value}</span>
          <span className="text-xs text-gray-500">{row.id}</span>
        </div>
      ),
    },
    {
      key: "phone",
      label: "Li√™n h·ªá",
      render: (value, row) => (
        <div className="flex flex-col gap-1">
          <div className="flex items-center gap-2">
            <span>üìû</span>
            <span>{row.phone}</span>
          </div>
          <div className="flex items-center gap-2 text-gray-500">
            <span>‚úâÔ∏è</span>
            <span>{row.email}</span>
          </div>
        </div>
      ),
    },
    { key: "address", label: "ƒê·ªãa ch·ªâ" },
    {
      key: "status",
      label: "Tr·∫°ng th√°i",
      render: (value) => (
        <span
          className={`px-3 py-1 text-xs font-semibold rounded-full ${
            value === "Ho·∫°t ƒë·ªông"
              ? "bg-green-100 text-green-800"
              : "bg-gray-200 text-gray-700"
          }`}
        >
          {value}
        </span>
      ),
    },
  ];

  // --- H√†nh ƒë·ªông ---
  const handleView = (row) => alert(`üìã Xem chi ti·∫øt: ${row.name}`);
  const handleEdit = (row) => alert(`üìù S·ª≠a kh√°ch h√†ng: ${row.name}`);

  return (
    <div className="space-y-6">
      {/* --- Header --- */}
      <div className="flex items-center justify-between bg-white p-6 rounded-xl shadow">
        <h2 className="text-xl font-bold text-gray-800">Qu·∫£n l√Ω Kh√°ch h√†ng</h2>
        <button className="flex items-center gap-2 bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-lg font-semibold">
          <Plus size={18} /> Th√™m kh√°ch h√†ng
        </button>
      </div>

      {/* --- B·ªô l·ªçc v√† t√¨m ki·∫øm --- */}
      <div className="bg-white p-6 rounded-xl shadow flex flex-col md:flex-row gap-4 md:items-center md:justify-between">
        <div className="flex-1 flex items-center gap-4">
          <input
            type="text"
            placeholder="T√¨m theo t√™n, SƒêT, email..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-400 focus:border-transparent"
          />
          <select
            value={statusFilter}
            onChange={(e) => setStatusFilter(e.target.value)}
            className="border border-gray-300 px-3 py-2 rounded-lg focus:ring-2 focus:ring-orange-400 focus:border-transparent"
          >
            <option>T·∫•t c·∫£ tr·∫°ng th√°i</option>
            <option>Ho·∫°t ƒë·ªông</option>
            <option>D·ª´ng ho·∫°t ƒë·ªông</option>
          </select>
        </div>
        <button className="bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-semibold">
          T√¨m ki·∫øm
        </button>
      </div>

      {/* --- B·∫£ng kh√°ch h√†ng t√°i s·ª≠ d·ª•ng Table.jsx --- */}
      <Table
        columns={columns}
        data={filteredCustomers}
        onView={handleView}
        onEdit={handleEdit}
      />
    </div>
  );
};

export default CustomerManagement;
